<?xml version="1.0" encoding="UTF-8"?>
<project name="geeklog" basedir="." default="help">
    <!-- Some properties are now taken from the "build.properties" file in the root directory -->
    <property file="./build.properties"/>
    <property name="srcDir" value="." override="false"/>
    <property name="dstDir" value="./build" override="false"/>

    <!-- Define custom tasks -->
    <includepath classpath="${srcDir}/system/build/tasks"/>
    <taskdef name="myDiff" classname="MyDiffTask"/>
    <taskdef name="MyRemoveUnchangedFiles" classname="MyRemoveUnchangedFilesTask"/>

    <!-- ============================== -->
    <!-- Target: help                   -->
    <!-- ============================== -->
    <target name="help">
        <echo msg="Geeklog building tools"/>
        <echo msg="----------------------"/>
        <echo msg="First of all, change the directory to the root directory of the repository, where 'build.xml' resides."/>
        <echo msg="Then, edit the 'build.properties' file in the root directory, if necessary."/>
        <echo msg="For Unixy users, please use 'phing' instead of 'phing.bat' in the descriptions below."/>
        <echo msg=""/>
        <echo msg="To show help [this screen], enter:"/>
        <echo msg="./system/build/vendor/phing/phing/bin/phing.bat[ENTER]"/>
        <echo msg=""/>
        <echo msg="To create an INSTALL distribution tarball, enter:"/>
        <echo msg="./system/build/vendor/phing/phing/bin/phing.bat dist[ENTER]"/>
        <echo msg=""/>
        <echo msg="To create an UPGRADE distribution tarball, enter:"/>
        <echo msg="./system/build/vendor/phing/phing/bin/phing.bat dist-upgrade[ENTER]"/>
        <echo msg=""/>
        <echo msg="To synchronize language files, enter:"/>
        <echo msg="./system/build/vendor/phing/phing/bin/phing.bat lang[ENTER]"/>
    </target>

    <!-- ============================== -->
    <!-- Target: lang                   -->
    <!-- ============================== -->
    <target name="lang">
        <echo msg="Synchronizing language files..."/>

        <if>
            <os family="windows"/>
            <then>
                <exec executable="uplng.bat" dir="${srcDir}/system/build/lm">
                    <arg value="${version}"/>
                </exec>
            </then>
            <else>
                <exec executable="${srcDir}/system/build/lm/uplng.sh" dir="${srcDir}">
                    <arg value="${version}"/>
                </exec>
            </else>
        </if>

        <echo msg="Done."/>
    </target>

    <!-- ============================== -->
    <!-- Target: prepare                -->
    <!-- ============================== -->
    <target name="prepare">
        <echo msg="Making directory ${dstDir}..."/>
        <delete dir="${dstDir}" quiet="true"/>
        <mkdir dir="${dstDir}"/>
    </target>

    <!-- ============================== -->
    <!-- Target: build                  -->
    <!-- ============================== -->
    <target name="build" depends="prepare,lang">
        <!-- Create the "changed-files" and "removed-files" files -->
        <myDiff previousVersionSHA="${previousVersionSHA}" currentVersionSHA="${currentVersionSHA}"/>

        <!-- Copy files -->
        <echo msg="Copying files..."/>
        <copy todir="${dstDir}">
            <fileset dir="${srcDir}">
                <exclude name=".git"/>
                <exclude name=".git/**"/>
                <exclude name=".gitignore"/>
                <exclude name=".idea"/>
                <exclude name=".idea/**"/>
                <exclude name="build"/>
                <exclude name="build/**"/>
                <exclude name="build.xml"/>
                <exclude name="build.properties"/>
                <exclude name="phpunit.xml"/>
                <exclude name="**/buildpackage.php"/>
                <exclude name="public_html/layout/glnet_curve"/>
                <exclude name="public_html/layout/glnet_curve/**"/>
                <exclude name="system/build"/>
                <exclude name="system/build/**"/>
                <exclude name="system/composer.phar"/>
                <exclude name="**/tests"/>
                <exclude name="**/tests/**"/>
                <exclude name="**/*.php.dist"/>
                <exclude name="*.tar.gz"/>
                <exclude name="**/node_modules"/>
                <exclude name="**/node_modules/**"/>
                <exclude name="**/css_src/dest"/>
                <exclude name="**/css_src/dest/**"/>
            </fileset>
        </copy>

        <!-- Move *.php.dist files -->
        <copy file="${srcDir}/db-config.php.dist" tofile="${dstDir}/db-config.php"/>
        <copy file="${srcDir}/system/lib-custom.php.dist" tofile="${dstDir}/system/lib-custom.php"/>
        <copy file="${srcDir}/public_html/siteconfig.php.dist" tofile="${dstDir}/public_html/siteconfig.php"/>

        <!-- Move filemanager configuration file -->
        <copy file="${srcDir}/public_html/filemanager/config/filemanager.config.default.json"
              tofile="${dstDir}/public_html/filemanager/config/filemanager.config.json" overwrite="true"/>

        <!-- Change permissions -->
        <echo msg="Changing directory and file permissions..."/>
        <chmod file="${dstDir}/db-config.php" mode="${perm_file_w}"/>
        <chmod file="${dstDir}/emailgeeklogstories" mode="${perm_file_x}"/>
        <chmod file="${dstDir}/backups" mode="${perm_dir_w}"/>
        <chmod file="${dstDir}/data" mode="${perm_dir_w}"/>
        <chmod file="${dstDir}/data/layout_cache" mode="${perm_dir_w}"/>
        <chmod file="${dstDir}/data/layout_css" mode="${perm_dir_w}"/>
        <chmod file="${dstDir}/logs" mode="${perm_dir_w}"/>
        <chmod mode="${perm_file_w}">
            <fileset dir="${dstDir}/logs">
                <include name="*.log"/>
            </fileset>
        </chmod>
        <chmod file="${dstDir}/public_html/backend" mode="${perm_dir_w}"/>
        <chmod mode="${perm_file_w}">
            <fileset dir="${dstDir}/public_html/backend">
                <include name="*.rss"/>
            </fileset>
        </chmod>
        <chmod file="${dstDir}/public_html/images/articles" mode="${perm_dir_w}"/>
        <chmod mode="${perm_file_w}">
            <fileset dir="${dstDir}/public_html/images/articles">
                <include name="*,*.*"/>
            </fileset>
        </chmod>
        <chmod file="${dstDir}/public_html/images/library" mode="${perm_dir_w}"/>
        <chmod file="${dstDir}/public_html/images/library/File" mode="${perm_dir_w}"/>
        <chmod file="${dstDir}/public_html/images/library/Flash" mode="${perm_dir_w}"/>
        <chmod file="${dstDir}/public_html/images/library/Image" mode="${perm_dir_w}"/>
        <chmod file="${dstDir}/public_html/images/library/Image/_thumbs" mode="${perm_dir_w}"/>
        <chmod file="${dstDir}/public_html/images/library/Media" mode="${perm_dir_w}"/>
        <chmod file="${dstDir}/public_html/images/topics" mode="${perm_dir_w}"/>
        <chmod mode="${perm_file_w}">
            <fileset dir="${dstDir}/public_html/images/topics">
                <include name="*,*.*"/>
            </fileset>
        </chmod>
        <chmod file="${dstDir}/public_html/images/userphotos" mode="${perm_dir_w}"/>
        <chmod mode="${perm_file_w}">
            <fileset dir="${dstDir}/public_html/images/userphotos">
                <include name="*,*.*"/>
            </fileset>
        </chmod>
        <chmod file="${dstDir}/public_html/images/_thumbs" mode="${perm_dir_w}"/>
        <chmod file="${dstDir}/public_html/images/_thumbs/articles" mode="${perm_dir_w}"/>
        <chmod file="${dstDir}/public_html/images/_thumbs/userphotos" mode="${perm_dir_w}"/>
        <chmod file="${dstDir}/public_html/filemanager/config/filemanager.config.json" mode="${perm_file_w}"/>
        <chmod file="${dstDir}/public_html/siteconfig.php" mode="${perm_file_w}"/>
    </target>

    <!-- ============================== -->
    <!-- Target: dist                   -->
    <!-- ============================== -->
    <target name="dist" depends="build">
        <echo msg="Creating an INSTALL package..."/>
        <delete file="${project.basedir}/geeklog-${version}.tar.gz" quiet="true"/>
        <tar destfile="${project.basedir}/geeklog-${version}.tar.gz" compression="gzip">
            <fileset dir="${dstDir}">
                <include name="*"/>
            </fileset>
        </tar>

        <echo msg="Removing work files..."/>
        <delete dir="${dstDir}"/>

        <echo msg="Files copied and compressed in the current directory OK!"/>
    </target>

    <!-- ============================== -->
    <!-- Target: dist-upgrade           -->
    <!-- ============================== -->
    <target name="dist-upgrade" depends="build">
        <echo msg="Creating an UPGRADE package..."/>

        <!-- Remove unchanged file and create the "removed-files" file -->
        <MyRemoveUnchangedFiles previousVersionSHA="${previousVersionSHA}" currentVersionSHA="${currentVersionSHA}" dstDir="${dstDir}"/>

        <delete file="${project.basedir}/geeklog-${previousVersion}-to-${version}.tar.gz" quiet="true"/>
        <tar destfile="${project.basedir}/geeklog-${previousVersion}-to-${version}.tar.gz" compression="gzip">
            <fileset dir="${dstDir}">
                <include name="*"/>
            </fileset>
        </tar>

        <echo msg="Removing work files..."/>
        <delete dir="${dstDir}"/>

        <echo msg="Files copied and compressed in the current directory OK!"/>
    </target>
</project>
